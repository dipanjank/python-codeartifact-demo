name: poetry-build-test-release

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    strategy:
      matrix:
        python_version: ['3.8', '3.9', '3.10']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
          cache: poetry

      - name: Authenticate to CodeArtifact
        uses: ./.github/actions/codeartifact-login-action
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          codeartifact-domain: ca-demo
          codeartifact-domain-owner: 381665779871
          codeartifact-repository: ca-repo
          configure-poetry: true

      - name: Install Project Dependencies
        run: poetry install --with dev -E python-codeartifact-demo==1.5.1

      - name: Install current packge
        run: poetry add python-codeartifact-demo==1.5.1

      - name: Test with pytest
        run: poetry run pytest -vs

      - name: Build Package
        run: poetry build

  release:
    if: github.ref == 'refs/heads/main'
    needs:
      - test
    runs-on: ubuntu-latest
    concurrency: release
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Python Semantic Release
        run: pip install python-semantic-release==7.33.2
      - name: Create Release
        id: create-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          semantic-release publish --verbosity=DEBUG
